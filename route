import { NextResponse } from 'next/server'
import { ListObjectsV2Command, S3Client } from "@aws-sdk/client-s3"

export const runtime = 'edge'

export async function GET() {
  const { R2_ACCOUNT_ID, R2_ACCESS_KEY_ID, R2_SECRET_ACCESS_KEY, R2_BUCKET_NAME } = process.env

  const s3Client = new S3Client({
    region: 'auto',
    endpoint: `https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com`,
    credentials: {
      accessKeyId: R2_ACCESS_KEY_ID!,
      secretAccessKey: R2_SECRET_ACCESS_KEY!,
    },
  })

  try {
    const command = new ListObjectsV2Command({
      Bucket: R2_BUCKET_NAME,
    })

    const response = await s3Client.send(command)

    const photos = response.Contents?.map(item => ({
      id: item.Key,
      url: `https://${R2_BUCKET_NAME}.r2.cloudflarestorage.com/${item.Key}`,
      createdAt: item.LastModified?.toISOString(),
    })).sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()) || []

    return NextResponse.json(photos)
  } catch (error) {
    console.error('Error fetching photos:', error)
    return NextResponse.json({ error: 'Failed to fetch photos' }, { status: 500 })
  }
}
